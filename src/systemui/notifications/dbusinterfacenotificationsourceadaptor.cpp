/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp notificationmanager.xml -a dbusinterfacenotificationsourceadaptor -c DBusInterfaceNotificationSourceAdaptor -l DBusInterfaceNotificationSource -i dbusinterfacenotificationsource.h -i metatypedeclarations.h
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "dbusinterfacenotificationsourceadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class DBusInterfaceNotificationSourceAdaptor
 */

DBusInterfaceNotificationSourceAdaptor::DBusInterfaceNotificationSourceAdaptor(DBusInterfaceNotificationSource *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

DBusInterfaceNotificationSourceAdaptor::~DBusInterfaceNotificationSourceAdaptor()
{
    // destructor
}

uint DBusInterfaceNotificationSourceAdaptor::addGroup(uint notificationUserId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count, const QString &identifier)
{
    // handle method call com.meego.core.MNotificationManager.addGroup
    return parent()->addGroup(notificationUserId, eventType, summary, body, action, imageURI, count, identifier);
}

uint DBusInterfaceNotificationSourceAdaptor::addGroup(uint notificationUserId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count)
{
    // handle method call com.meego.core.MNotificationManager.addGroup
    return parent()->addGroup(notificationUserId, eventType, summary, body, action, imageURI, count);
}

uint DBusInterfaceNotificationSourceAdaptor::addGroup(uint notificationUserId, const QString &eventType)
{
    // handle method call com.meego.core.MNotificationManager.addGroup
    return parent()->addGroup(notificationUserId, eventType);
}

uint DBusInterfaceNotificationSourceAdaptor::addNotification(uint notificationUserId, uint groupId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count, const QString &identifier)
{
    // handle method call com.meego.core.MNotificationManager.addNotification
    return parent()->addNotification(notificationUserId, groupId, eventType, summary, body, action, imageURI, count, identifier);
}

uint DBusInterfaceNotificationSourceAdaptor::addNotification(uint notificationUserId, uint groupId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count)
{
    // handle method call com.meego.core.MNotificationManager.addNotification
    return parent()->addNotification(notificationUserId, groupId, eventType, summary, body, action, imageURI, count);
}

uint DBusInterfaceNotificationSourceAdaptor::addNotification(uint notificationUserId, uint groupId, const QString &eventType)
{
    // handle method call com.meego.core.MNotificationManager.addNotification
    return parent()->addNotification(notificationUserId, groupId, eventType);
}

uint DBusInterfaceNotificationSourceAdaptor::notificationCountInGroup(uint notificationUserId, uint groupId)
{
    // handle method call com.meego.core.MNotificationManager.notificationCountInGroup
    return parent()->notificationCountInGroup(notificationUserId, groupId);
}

QList < MNotificationGroupProxy >  DBusInterfaceNotificationSourceAdaptor::notificationGroupList(uint notificationUserId)
{
    // handle method call com.meego.core.MNotificationManager.notificationGroupList
    return parent()->notificationGroupList(notificationUserId);
}

QList < MNotificationGroupWithIdentifierProxy >  DBusInterfaceNotificationSourceAdaptor::notificationGroupListWithIdentifiers(uint notificationUserId)
{
    // handle method call com.meego.core.MNotificationManager.notificationGroupListWithIdentifiers
    return parent()->notificationGroupListWithIdentifiers(notificationUserId);
}

QList < uint >  DBusInterfaceNotificationSourceAdaptor::notificationIdList(uint notificationUserId)
{
    // handle method call com.meego.core.MNotificationManager.notificationIdList
    return parent()->notificationIdList(notificationUserId);
}

QList < MNotificationProxy >  DBusInterfaceNotificationSourceAdaptor::notificationList(uint notificationUserId)
{
    // handle method call com.meego.core.MNotificationManager.notificationList
    return parent()->notificationList(notificationUserId);
}

QList < MNotificationWithIdentifierProxy >  DBusInterfaceNotificationSourceAdaptor::notificationListWithIdentifiers(uint notificationUserId)
{
    // handle method call com.meego.core.MNotificationManager.notificationListWithIdentifiers
    return parent()->notificationListWithIdentifiers(notificationUserId);
}

uint DBusInterfaceNotificationSourceAdaptor::notificationUserId()
{
    // handle method call com.meego.core.MNotificationManager.notificationUserId
    return parent()->notificationUserId();
}

bool DBusInterfaceNotificationSourceAdaptor::removeGroup(uint notificationUserId, uint groupId)
{
    // handle method call com.meego.core.MNotificationManager.removeGroup
    return parent()->removeGroup(notificationUserId, groupId);
}

bool DBusInterfaceNotificationSourceAdaptor::removeNotification(uint notificationUserId, uint notificationId)
{
    // handle method call com.meego.core.MNotificationManager.removeNotification
    return parent()->removeNotification(notificationUserId, notificationId);
}

bool DBusInterfaceNotificationSourceAdaptor::updateGroup(uint notificationUserId, uint groupId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count, const QString &identifier)
{
    // handle method call com.meego.core.MNotificationManager.updateGroup
    return parent()->updateGroup(notificationUserId, groupId, eventType, summary, body, action, imageURI, count, identifier);
}

bool DBusInterfaceNotificationSourceAdaptor::updateGroup(uint notificationUserId, uint groupId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count)
{
    // handle method call com.meego.core.MNotificationManager.updateGroup
    return parent()->updateGroup(notificationUserId, groupId, eventType, summary, body, action, imageURI, count);
}

bool DBusInterfaceNotificationSourceAdaptor::updateGroup(uint notificationUserId, uint groupId, const QString &eventType)
{
    // handle method call com.meego.core.MNotificationManager.updateGroup
    return parent()->updateGroup(notificationUserId, groupId, eventType);
}

bool DBusInterfaceNotificationSourceAdaptor::updateNotification(uint notificationUserId, uint notificationId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count, const QString &identifier)
{
    // handle method call com.meego.core.MNotificationManager.updateNotification
    return parent()->updateNotification(notificationUserId, notificationId, eventType, summary, body, action, imageURI, count, identifier);
}

bool DBusInterfaceNotificationSourceAdaptor::updateNotification(uint notificationUserId, uint notificationId, const QString &eventType, const QString &summary, const QString &body, const QString &action, const QString &imageURI, uint count)
{
    // handle method call com.meego.core.MNotificationManager.updateNotification
    return parent()->updateNotification(notificationUserId, notificationId, eventType, summary, body, action, imageURI, count);
}

bool DBusInterfaceNotificationSourceAdaptor::updateNotification(uint notificationUserId, uint notificationId, const QString &eventType)
{
    // handle method call com.meego.core.MNotificationManager.updateNotification
    return parent()->updateNotification(notificationUserId, notificationId, eventType);
}

